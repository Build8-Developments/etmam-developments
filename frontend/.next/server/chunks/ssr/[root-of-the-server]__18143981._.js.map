{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/src/contexts/LanguageContext.tsx","turbopack:///[project]/src/hooks/index.ts"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","'use client';\n\nimport { createContext, useContext, ReactNode } from 'react';\nimport { LanguageContextType } from '@/types';\nimport { useLanguage as useLanguageHook } from '@/hooks';\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const languageContext = useLanguageHook();\n\n  return (\n    <LanguageContext.Provider value={languageContext}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n\n","import { useState, useEffect, useCallback } from 'react';\nimport { Language } from '@/types';\n\n/**\n * Custom hook for managing scroll position\n */\nexport const useScrollPosition = () => {\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  useEffect(() => {\n    const updatePosition = () => {\n      setScrollPosition(window.pageYOffset);\n    };\n\n    window.addEventListener('scroll', updatePosition);\n    updatePosition();\n\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, []);\n\n  return scrollPosition;\n};\n\n/**\n * Custom hook for managing window size\n */\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({\n    width: typeof window !== 'undefined' ? window.innerWidth : 0,\n    height: typeof window !== 'undefined' ? window.innerHeight : 0,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n};\n\n/**\n * Custom hook for managing mobile menu state\n */\nexport const useMobileMenu = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = useCallback(() => {\n    setIsOpen(prev => !prev);\n  }, []);\n\n  const close = useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  const open = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  // Prevent body scroll when menu is open\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n    }\n\n    return () => {\n      document.body.style.overflow = '';\n    };\n  }, [isOpen]);\n\n  // Close menu on escape key\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        close();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, [isOpen, close]);\n\n  return {\n    isOpen,\n    toggle,\n    close,\n    open,\n  };\n};\n\n/**\n * Custom hook for managing language with localStorage persistence\n */\nexport const useLanguage = () => {\n  const [language, setLanguageState] = useState<Language>('ar');\n\n  const setLanguage = useCallback((lang: Language) => {\n    setLanguageState(lang);\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('language', lang);\n      document.documentElement.dir = lang === 'ar' ? 'rtl' : 'ltr';\n      document.documentElement.lang = lang;\n    }\n  }, []);\n\n  // Load saved language on mount\n  useEffect(() => {\n    try {\n      const saved = localStorage.getItem('language') as Language | null;\n      if (saved === 'en' || saved === 'ar') {\n        setLanguageState(saved);\n        document.documentElement.dir = saved === 'ar' ? 'rtl' : 'ltr';\n        document.documentElement.lang = saved;\n      }\n    } catch {\n      // Ignore localStorage errors\n    }\n  }, []);\n\n  return {\n    language,\n    setLanguage,\n    isRTL: language === 'ar',\n  };\n};\n\n/**\n * Custom hook for managing intersection observer\n */\nexport const useIntersectionObserver = (\n  elementRef: React.RefObject<Element>,\n  options: IntersectionObserverInit = {}\n) => {\n  const [isIntersecting, setIsIntersecting] = useState(false);\n\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry) {\n          setIsIntersecting(entry.isIntersecting);\n        }\n      },\n      {\n        threshold: 0.1,\n        ...options,\n      }\n    );\n\n    observer.observe(element);\n\n    return () => {\n      observer.unobserve(element);\n    };\n  }, [elementRef, options]);\n\n  return isIntersecting;\n};\n\n/**\n * Custom hook for managing form state\n */\nexport const useForm = <T extends Record<string, unknown>>(initialValues: T) => {\n  const [values, setValues] = useState<T>(initialValues);\n  const [errors, setErrors] = useState<Partial<Record<keyof T, string>>>({});\n\n  const setValue = useCallback((name: keyof T, value: unknown) => {\n    setValues(prev => ({ ...prev, [name]: value }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  }, [errors]);\n\n  const setError = useCallback((name: keyof T, error: string) => {\n    setErrors(prev => ({ ...prev, [name]: error }));\n  }, []);\n\n  const reset = useCallback(() => {\n    setValues(initialValues);\n    setErrors({});\n  }, [initialValues]);\n\n  return {\n    values,\n    errors,\n    setValue,\n    setError,\n    reset,\n  };\n};\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","vendored","ReactJsxRuntime","React"],"mappings":"0NA0BQG,EAAOC,OAAO,CAAGC,EAAQ,CAAA,CAAA,IAAA,iCC1BjCF,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEC,eAAe,8BCFxCP,GAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEE,KAAK,0GCA9B,EAAA,EAAA,CAAA,CAAA,8DCgDO,IAAM,EAAgB,KAC3B,GAAM,CAAC,EAAQ,EAAU,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,GAAC,GAE/B,EAAS,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,KACzB,EAAU,GAAQ,CAAC,EACrB,EAAG,EAAE,EAEC,EAAQ,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,KACxB,GAAU,EACZ,EAAG,EAAE,EAEC,EAAO,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,KACvB,GAAU,EACZ,EAAG,EAAE,EAgCL,MA7BA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACJ,EACF,MADU,GACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,SAE/B,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,GAG1B,KACL,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,EACjC,GACC,CAAC,EAAO,EAGX,CAAA,EAAA,EAAA,SAAS,AAAT,EAAU,KACR,IAAM,EAAe,AAAC,IAChB,AAAU,UAAU,GAAlB,GAAG,EACP,GAEJ,EAMA,OAJI,GACF,KADU,IACD,gBAAgB,CAAC,UAAW,GAGhC,KACL,SAAS,mBAAmB,CAAC,UAAW,EAC1C,CACF,EAAG,CAAC,EAAQ,EAAM,EAEX,QACL,SACA,QACA,OACA,CACF,CACF,EAKa,EAAc,KACzB,GAAM,CAAC,EAAU,EAAiB,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAW,MAElD,EAAc,CAAA,EAAA,EAAA,WAAW,AAAX,EAAY,AAAC,IAC/B,EAAiB,EAMnB,EAAG,EAAE,EAgBL,MAbA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,GAAI,CACF,IAAM,EAAQ,aAAa,OAAO,CAAC,aACrB,OAAV,GAA4B,OAAV,CAAU,GAAM,CACpC,EAAiB,GACjB,SAAS,eAAe,CAAC,GAAG,CAAa,OAAV,EAAiB,MAAQ,MACxD,SAAS,eAAe,CAAC,IAAI,CAAG,EAEpC,CAAE,KAAM,CAER,CACF,EAAG,EAAE,EAEE,UACL,cACA,EACA,MAAoB,OAAb,CACT,CACF,EDnIM,EAAkB,CAAA,EAAA,EAAA,aAAA,AAAa,OAAkC,GAEhE,SAAS,EAAiB,UAAE,CAAQ,CAA2B,EACpE,IAAM,EAAkB,IAExB,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAgB,QAAQ,CAAA,CAAC,MAAO,WAC9B,GAGP,CAEO,SAAS,IACd,IAAM,EAAU,CAAA,EAAA,EAAA,UAAA,AAAU,EAAC,GAC3B,QAAgB,IAAZ,EACF,KADyB,CACnB,AAAI,MAAM,sDAElB,OAAO,CACT","ignoreList":[0,1,2]}