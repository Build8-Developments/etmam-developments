// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/blog" | "/blog/[id]" | "/consulting" | "/consulting/[serviceId]" | "/contact" | "/legalservices" | "/legalservices/[companyId]" | "/legalservices/[companyId]/[serviceId]" | "/offers" | "/packages" | "/privacy-policy" | "/services" | "/terms-conditions"
type PageRoutes = never
type LayoutRoutes = "/" | "/blog/[id]"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/blog": {}
  "/blog/[id]": { "id": string; }
  "/consulting": {}
  "/consulting/[serviceId]": { "serviceId": string; }
  "/contact": {}
  "/legalservices": {}
  "/legalservices/[companyId]": { "companyId": string; }
  "/legalservices/[companyId]/[serviceId]": { "companyId": string; "serviceId": string; }
  "/offers": {}
  "/packages": {}
  "/privacy-policy": {}
  "/services": {}
  "/terms-conditions": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/blog/[id]": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
